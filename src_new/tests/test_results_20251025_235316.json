{
  "timestamp": "2025-10-25T23:53:11.681276",
  "environment": "test",
  "test_suites": {
    "unit": {
      "status": "completed",
      "return_code": 0,
      "stdout": "============================= test session starts ==============================\ncollecting ... collected 15 items\n\ntests/test_api_refactor.py::TestThreadControlAPI::test_start_thread_success PASSED [  6%]\ntests/test_api_refactor.py::TestThreadControlAPI::test_start_thread_not_found PASSED [ 13%]\ntests/test_api_refactor.py::TestThreadControlAPI::test_start_thread_invalid_status PASSED [ 20%]\ntests/test_api_refactor.py::TestThreadControlAPI::test_pause_thread_success PASSED [ 26%]\ntests/test_api_refactor.py::TestThreadControlAPI::test_resume_thread_success PASSED [ 33%]\ntests/test_api_refactor.py::TestThreadControlAPI::test_get_thread_status_success PASSED [ 40%]\ntests/test_api_refactor.py::TestThreadControlAPI::test_get_thread_logs_success PASSED [ 46%]\ntests/test_api_refactor.py::TestFlowStartAPI::test_start_flow_latest_version PASSED [ 53%]\ntests/test_api_refactor.py::TestFlowStartAPI::test_start_flow_specific_version PASSED [ 60%]\ntests/test_api_refactor.py::TestFlowStartAPI::test_start_flow_not_found PASSED [ 66%]\ntests/test_api_refactor.py::TestFlowStartAPI::test_start_flow_invalid_version_format PASSED [ 73%]\ntests/test_api_refactor.py::TestFlowStartAPI::test_start_flow_version_not_found PASSED [ 80%]\ntests/test_api_refactor.py::TestAPIValidation::test_thread_id_validation PASSED [ 86%]\ntests/test_api_refactor.py::TestAPIValidation::test_flow_id_version_parsing PASSED [ 93%]\ntests/test_api_refactor.py::TestAPIValidation::test_error_response_format PASSED [100%]\n\n============================== 15 passed in 1.40s ==============================\n",
      "stderr": "/Users/haowu/Library/Python/3.9/lib/python/site-packages/pytest_asyncio/plugin.py:208: PytestDeprecationWarning: The configuration option \"asyncio_default_fixture_loop_scope\" is unset.\nThe event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: \"function\", \"class\", \"module\", \"package\", \"session\"\n\n  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))\n",
      "success": true,
      "stats": {
        "total": 15,
        "passed": 15,
        "failed": 0,
        "errors": 0,
        "skipped": 0,
        "success_rate": 100.0
      }
    },
    "integration": {
      "status": "completed",
      "return_code": 1,
      "stdout": "============================= test session starts ==============================\ncollecting ... collected 10 items\n\ntests/test_integration_fixed.py::TestDatabaseIntegration::test_database_initialization PASSED [ 10%]\ntests/test_integration_fixed.py::TestDatabaseIntegration::test_flow_crud_operations PASSED [ 20%]\ntests/test_integration_fixed.py::TestDatabaseIntegration::test_run_lifecycle_operations ERROR [ 30%]\ntests/test_integration_fixed.py::TestWorkflowEngineIntegration::test_workflow_creation_and_compilation ERROR [ 40%]\ntests/test_integration_fixed.py::TestWorkflowEngineIntegration::test_workflow_execution_lifecycle ERROR [ 50%]\ntests/test_integration_fixed.py::TestAPIIntegration::test_flow_creation_and_start_integration ERROR [ 60%]\ntests/test_integration_fixed.py::TestAPIIntegration::test_thread_control_integration ERROR [ 70%]\ntests/test_integration_fixed.py::TestAPIIntegration::test_error_handling_integration ERROR [ 80%]\ntests/test_integration_fixed.py::TestConcurrencyIntegration::test_concurrent_workflow_creation ERROR [ 90%]\ntests/test_integration_fixed.py::TestConcurrencyIntegration::test_concurrent_database_operations ERROR [100%]\n\n==================================== ERRORS ====================================\n___ ERROR at setup of TestDatabaseIntegration.test_run_lifecycle_operations ____\n../../../Library/Python/3.9/lib/python/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context\n    self.dialect.do_execute(\n../../../Library/Python/3.9/lib/python/site-packages/sqlalchemy/engine/default.py:941: in do_execute\n    cursor.execute(statement, parameters)\nE   sqlite3.OperationalError: index idx_versions_flow_published already exists\n\nThe above exception was the direct cause of the following exception:\ntests/test_integration_fixed.py:82: in db_manager\n    return DatabaseManager(temp_db)\nworkflow_engine/storage/database.py:101: in __init__\n    Base.metadata.create_all(bind=self.engine)\n../../../Library/Python/3.9/lib/python/site-packages/sqlalchemy/sql/schema.py:5868: in create_all\n    bind._run_ddl_visitor(\n../../../Library/Python/3.9/lib/python/site-packages/sqlalchemy/engine/base.py:3253: in _run_ddl_visitor\n    conn._run_ddl_visitor(visitorcallable, element, **kwargs)\n../../../Library/Python/3.9/lib/python/site-packages/sqlalchemy/engine/base.py:2459: in _run_ddl_visitor\n    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)\n../../../Library/Python/3.9/lib/python/site-packages/sqlalchemy/sql/visitors.py:664: in traverse_single\n    return meth(obj, **kw)\n../../../Library/Python/3.9/lib/python/site-packages/sqlalchemy/sql/ddl.py:918: in visit_metadata\n    self.traverse_single(\n../../../Library/Python/3.9/lib/python/site-packages/sqlalchemy/sql/visitors.py:664: in traverse_single\n    return meth(obj, **kw)\n../../../Library/Python/3.9/lib/python/site-packages/sqlalchemy/sql/ddl.py:960: in visit_table\n    self.traverse_single(index, create_ok=True)\n../../../Library/Python/3.9/lib/python/site-packages/sqlalchemy/sql/visitors.py:664: in traverse_single\n    return meth(obj, **kw)\n../../../Library/Python/3.9/lib/python/site-packages/sqlalchemy/sql/ddl.py:997: in visit_index\n    CreateIndex(index)._invoke_with(self.connection)\n../../../Library/Python/3.9/lib/python/site-packages/sqlalchemy/sql/ddl.py:314: in _invoke_with\n    return bind.execute(self)\n../../../Library/Python/3.9/lib/python/site-packages/sqlalchemy/engine/base.py:1418: in execute\n    return meth(\n../../../Library/Python/3.9/lib/python/site-packages/sqlalchemy/sql/ddl.py:180: in _execute_on_connection\n    return connection._execute_ddl(\n../../../Library/Python/3.9/lib/python/site-packages/sqlalchemy/engine/base.py:1529: in _execute_ddl\n    ret = self._execute_context(\n../../../Library/Python/3.9/lib/python/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context\n    return self._exec_single_context(\n../../../Library/Python/3.9/lib/python/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context\n    self._handle_dbapi_exception(\n../../../Library/Python/3.9/lib/python/site-packages/sqlalchemy/engine/base.py:2355: in _handle_dbapi_exception\n    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n../../../Library/Python/3.9/lib/python/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context\n    self.dialect.do_execute(\n../../../Library/Python/3.9/lib/python/site-packages/sqlalchemy/engine/default.py:941: in do_execute\n    cursor.execute(statement, parameters)\nE   sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) index idx_versions_flow_published already exists\nE   [SQL: CREATE INDEX idx_versions_flow_published ON flow_versions (flow_id, published)]\nE   (Background on this error at: https://sqlalche.me/e/20/e3q8)\n_ ERROR at setup of TestWorkflowEngineIntegration.test_workflow_creation_and_compilation _\n../../../Library/Python/3.9/lib/python/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context\n    self.dialect.do_execute(\n../../../Library/Python/3.9/lib/python/site-packages/sqlalchemy/engine/default.py:941: in do_execute\n    cursor.execute(statement, parameters)\nE   sqlite3.OperationalError: index idx_versions_flow_published already exists\n\nThe above exception was the direct cause of the following exception:\ntests/test_integration_fixed.py:159: in workflow_engine\n    return WorkflowEngine(config=temp_config)\nworkflow_engine/core/engine.py:48: in __init__\n    self.db_manager = DatabaseManager(self.config.db_path)\nworkflow_engine/storage/database.py:101: in __init__\n    Base.metadata.create_all(bind=self.engine)\n../../../Library/Python/3.9/lib/python/site-packages/sqlalchemy/sql/schema.py:5868: in create_all\n    bind._run_ddl_visitor(\n../../../Library/Python/3.9/lib/python/site-packages/sqlalchemy/engine/base.py:3253: in _run_ddl_visitor\n    conn._run_ddl_visitor(visitorcallable, element, **kwargs)\n../../../Library/Python/3.9/lib/python/site-packages/sqlalchemy/engine/base.py:2459: in _run_ddl_visitor\n    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)\n../../../Library/Python/3.9/lib/python/site-packages/sqlalchemy/sql/visitors.py:664: in traverse_single\n    return meth(obj, **kw)\n../../../Library/Python/3.9/lib/python/site-packages/sqlalchemy/sql/ddl.py:918: in visit_metadata\n    self.traverse_single(\n../../../Library/Python/3.9/lib/python/site-packages/sqlalchemy/sql/visitors.py:664: in traverse_single\n    return meth(obj, **kw)\n../../../Library/Python/3.9/lib/python/site-packages/sqlalchemy/sql/ddl.py:960: in visit_table\n    self.traverse_single(index, create_ok=True)\n../../../Library/Python/3.9/lib/python/site-packages/sqlalchemy/sql/visitors.py:664: in traverse_single\n    return meth(obj, **kw)\n../../../Library/Python/3.9/lib/python/site-packages/sqlalchemy/sql/ddl.py:997: in visit_index\n    CreateIndex(index)._invoke_with(self.connection)\n../../../Library/Python/3.9/lib/python/site-packages/sqlalchemy/sql/ddl.py:314: in _invoke_with\n    return bind.execute(self)\n../../../Library/Python/3.9/lib/python/site-packages/sqlalchemy/engine/base.py:1418: in execute\n    return meth(\n../../../Library/Python/3.9/lib/python/site-packages/sqlalchemy/sql/ddl.py:180: in _execute_on_connection\n    return connection._execute_ddl(\n../../../Library/Python/3.9/lib/python/site-packages/sqlalchemy/engine/base.py:1529: in _execute_ddl\n    ret = self._execute_context(\n../../../Library/Python/3.9/lib/python/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context\n    return self._exec_single_context(\n../../../Library/Python/3.9/lib/python/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context\n    self._handle_dbapi_exception(\n../../../Library/Python/3.9/lib/python/site-packages/sqlalchemy/engine/base.py:2355: in _handle_dbapi_exception\n    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n../../../Library/Python/3.9/lib/python/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context\n    self.dialect.do_execute(\n../../../Library/Python/3.9/lib/python/site-packages/sqlalchemy/engine/default.py:941: in do_execute\n    cursor.execute(statement, parameters)\nE   sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) index idx_versions_flow_published already exists\nE   [SQL: CREATE INDEX idx_versions_flow_published ON flow_versions (flow_id, published)]\nE   (Background on this error at: https://sqlalche.me/e/20/e3q8)\n_ ERROR at setup of TestWorkflowEngineIntegration.test_workflow_execution_lifecycle _\n../../../Library/Python/3.9/lib/python/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context\n    self.dialect.do_execute(\n../../../Library/Python/3.9/lib/python/site-packages/sqlalchemy/engine/default.py:941: in do_execute\n    cursor.execute(statement, parameters)\nE   sqlite3.OperationalError: index idx_versions_flow_published already exists\n\nThe above exception was the direct cause of the following exception:\ntests/test_integration_fixed.py:159: in workflow_engine\n    return WorkflowEngine(config=temp_config)\nworkflow_engine/core/engine.py:48: in __init__\n    self.db_manager = DatabaseManager(self.config.db_path)\nworkflow_engine/storage/database.py:101: in __init__\n    Base.metadata.create_all(bind=self.engine)\n../../../Library/Python/3.9/lib/python/site-packages/sqlalchemy/sql/schema.py:5868: in create_all\n    bind._run_ddl_visitor(\n../../../Library/Python/3.9/lib/python/site-packages/sqlalchemy/engine/base.py:3253: in _run_ddl_visitor\n    conn._run_ddl_visitor(visitorcallable, element, **kwargs)\n../../../Library/Python/3.9/lib/python/site-packages/sqlalchemy/engine/base.py:2459: in _run_ddl_visitor\n    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)\n../../../Library/Python/3.9/lib/python/site-packages/sqlalchemy/sql/visitors.py:664: in traverse_single\n    return meth(obj, **kw)\n../../../Library/Python/3.9/lib/python/site-packages/sqlalchemy/sql/ddl.py:918: in visit_metadata\n    self.traverse_single(\n../../../Library/Python/3.9/lib/python/site-packages/sqlalchemy/sql/visitors.py:664: in traverse_single\n    return meth(obj, **kw)\n../../../Library/Python/3.9/lib/python/site-packages/sqlalchemy/sql/ddl.py:960: in visit_table\n    self.traverse_single(index, create_ok=True)\n../../../Library/Python/3.9/lib/python/site-packages/sqlalchemy/sql/visitors.py:664: in traverse_single\n    return meth(obj, **kw)\n../../../Library/Python/3.9/lib/python/site-packages/sqlalchemy/sql/ddl.py:997: in visit_index\n    CreateIndex(index)._invoke_with(self.connection)\n../../../Library/Python/3.9/lib/python/site-packages/sqlalchemy/sql/ddl.py:314: in _invoke_with\n    return bind.execute(self)\n../../../Library/Python/3.9/lib/python/site-packages/sqlalchemy/engine/base.py:1418: in execute\n    return meth(\n../../../Library/Python/3.9/lib/python/site-packages/sqlalchemy/sql/ddl.py:180: in _execute_on_connection\n    return connection._execute_ddl(\n../../../Library/Python/3.9/lib/python/site-packages/sqlalchemy/engine/base.py:1529: in _execute_ddl\n    ret = self._execute_context(\n../../../Library/Python/3.9/lib/python/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context\n    return self._exec_single_context(\n../../../Library/Python/3.9/lib/python/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context\n    self._handle_dbapi_exception(\n../../../Library/Python/3.9/lib/python/site-packages/sqlalchemy/engine/base.py:2355: in _handle_dbapi_exception\n    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n../../../Library/Python/3.9/lib/python/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context\n    self.dialect.do_execute(\n../../../Library/Python/3.9/lib/python/site-packages/sqlalchemy/engine/default.py:941: in do_execute\n    cursor.execute(statement, parameters)\nE   sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) index idx_versions_flow_published already exists\nE   [SQL: CREATE INDEX idx_versions_flow_published ON flow_versions (flow_id, published)]\nE   (Background on this error at: https://sqlalche.me/e/20/e3q8)\n_ ERROR at setup of TestAPIIntegration.test_flow_creation_and_start_integration _\ntests/test_integration_fixed.py:224: in temp_app\n    app = create_app(config=config)\nE   TypeError: create_app() got an unexpected keyword argument 'config'\n_____ ERROR at setup of TestAPIIntegration.test_thread_control_integration _____\ntests/test_integration_fixed.py:224: in temp_app\n    app = create_app(config=config)\nE   TypeError: create_app() got an unexpected keyword argument 'config'\n_____ ERROR at setup of TestAPIIntegration.test_error_handling_integration _____\ntests/test_integration_fixed.py:224: in temp_app\n    app = create_app(config=config)\nE   TypeError: create_app() got an unexpected keyword argument 'config'\n_ ERROR at setup of TestConcurrencyIntegration.test_concurrent_workflow_creation _\n../../../Library/Python/3.9/lib/python/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context\n    self.dialect.do_execute(\n../../../Library/Python/3.9/lib/python/site-packages/sqlalchemy/engine/default.py:941: in do_execute\n    cursor.execute(statement, parameters)\nE   sqlite3.OperationalError: index idx_versions_flow_published already exists\n\nThe above exception was the direct cause of the following exception:\ntests/test_integration_fixed.py:323: in shared_engine\n    engine = WorkflowEngine(config=config)\nworkflow_engine/core/engine.py:48: in __init__\n    self.db_manager = DatabaseManager(self.config.db_path)\nworkflow_engine/storage/database.py:101: in __init__\n    Base.metadata.create_all(bind=self.engine)\n../../../Library/Python/3.9/lib/python/site-packages/sqlalchemy/sql/schema.py:5868: in create_all\n    bind._run_ddl_visitor(\n../../../Library/Python/3.9/lib/python/site-packages/sqlalchemy/engine/base.py:3253: in _run_ddl_visitor\n    conn._run_ddl_visitor(visitorcallable, element, **kwargs)\n../../../Library/Python/3.9/lib/python/site-packages/sqlalchemy/engine/base.py:2459: in _run_ddl_visitor\n    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)\n../../../Library/Python/3.9/lib/python/site-packages/sqlalchemy/sql/visitors.py:664: in traverse_single\n    return meth(obj, **kw)\n../../../Library/Python/3.9/lib/python/site-packages/sqlalchemy/sql/ddl.py:918: in visit_metadata\n    self.traverse_single(\n../../../Library/Python/3.9/lib/python/site-packages/sqlalchemy/sql/visitors.py:664: in traverse_single\n    return meth(obj, **kw)\n../../../Library/Python/3.9/lib/python/site-packages/sqlalchemy/sql/ddl.py:960: in visit_table\n    self.traverse_single(index, create_ok=True)\n../../../Library/Python/3.9/lib/python/site-packages/sqlalchemy/sql/visitors.py:664: in traverse_single\n    return meth(obj, **kw)\n../../../Library/Python/3.9/lib/python/site-packages/sqlalchemy/sql/ddl.py:997: in visit_index\n    CreateIndex(index)._invoke_with(self.connection)\n../../../Library/Python/3.9/lib/python/site-packages/sqlalchemy/sql/ddl.py:314: in _invoke_with\n    return bind.execute(self)\n../../../Library/Python/3.9/lib/python/site-packages/sqlalchemy/engine/base.py:1418: in execute\n    return meth(\n../../../Library/Python/3.9/lib/python/site-packages/sqlalchemy/sql/ddl.py:180: in _execute_on_connection\n    return connection._execute_ddl(\n../../../Library/Python/3.9/lib/python/site-packages/sqlalchemy/engine/base.py:1529: in _execute_ddl\n    ret = self._execute_context(\n../../../Library/Python/3.9/lib/python/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context\n    return self._exec_single_context(\n../../../Library/Python/3.9/lib/python/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context\n    self._handle_dbapi_exception(\n../../../Library/Python/3.9/lib/python/site-packages/sqlalchemy/engine/base.py:2355: in _handle_dbapi_exception\n    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n../../../Library/Python/3.9/lib/python/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context\n    self.dialect.do_execute(\n../../../Library/Python/3.9/lib/python/site-packages/sqlalchemy/engine/default.py:941: in do_execute\n    cursor.execute(statement, parameters)\nE   sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) index idx_versions_flow_published already exists\nE   [SQL: CREATE INDEX idx_versions_flow_published ON flow_versions (flow_id, published)]\nE   (Background on this error at: https://sqlalche.me/e/20/e3q8)\n_ ERROR at setup of TestConcurrencyIntegration.test_concurrent_database_operations _\n../../../Library/Python/3.9/lib/python/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context\n    self.dialect.do_execute(\n../../../Library/Python/3.9/lib/python/site-packages/sqlalchemy/engine/default.py:941: in do_execute\n    cursor.execute(statement, parameters)\nE   sqlite3.OperationalError: index idx_versions_flow_published already exists\n\nThe above exception was the direct cause of the following exception:\ntests/test_integration_fixed.py:323: in shared_engine\n    engine = WorkflowEngine(config=config)\nworkflow_engine/core/engine.py:48: in __init__\n    self.db_manager = DatabaseManager(self.config.db_path)\nworkflow_engine/storage/database.py:101: in __init__\n    Base.metadata.create_all(bind=self.engine)\n../../../Library/Python/3.9/lib/python/site-packages/sqlalchemy/sql/schema.py:5868: in create_all\n    bind._run_ddl_visitor(\n../../../Library/Python/3.9/lib/python/site-packages/sqlalchemy/engine/base.py:3253: in _run_ddl_visitor\n    conn._run_ddl_visitor(visitorcallable, element, **kwargs)\n../../../Library/Python/3.9/lib/python/site-packages/sqlalchemy/engine/base.py:2459: in _run_ddl_visitor\n    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)\n../../../Library/Python/3.9/lib/python/site-packages/sqlalchemy/sql/visitors.py:664: in traverse_single\n    return meth(obj, **kw)\n../../../Library/Python/3.9/lib/python/site-packages/sqlalchemy/sql/ddl.py:918: in visit_metadata\n    self.traverse_single(\n../../../Library/Python/3.9/lib/python/site-packages/sqlalchemy/sql/visitors.py:664: in traverse_single\n    return meth(obj, **kw)\n../../../Library/Python/3.9/lib/python/site-packages/sqlalchemy/sql/ddl.py:960: in visit_table\n    self.traverse_single(index, create_ok=True)\n../../../Library/Python/3.9/lib/python/site-packages/sqlalchemy/sql/visitors.py:664: in traverse_single\n    return meth(obj, **kw)\n../../../Library/Python/3.9/lib/python/site-packages/sqlalchemy/sql/ddl.py:997: in visit_index\n    CreateIndex(index)._invoke_with(self.connection)\n../../../Library/Python/3.9/lib/python/site-packages/sqlalchemy/sql/ddl.py:314: in _invoke_with\n    return bind.execute(self)\n../../../Library/Python/3.9/lib/python/site-packages/sqlalchemy/engine/base.py:1418: in execute\n    return meth(\n../../../Library/Python/3.9/lib/python/site-packages/sqlalchemy/sql/ddl.py:180: in _execute_on_connection\n    return connection._execute_ddl(\n../../../Library/Python/3.9/lib/python/site-packages/sqlalchemy/engine/base.py:1529: in _execute_ddl\n    ret = self._execute_context(\n../../../Library/Python/3.9/lib/python/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context\n    return self._exec_single_context(\n../../../Library/Python/3.9/lib/python/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context\n    self._handle_dbapi_exception(\n../../../Library/Python/3.9/lib/python/site-packages/sqlalchemy/engine/base.py:2355: in _handle_dbapi_exception\n    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n../../../Library/Python/3.9/lib/python/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context\n    self.dialect.do_execute(\n../../../Library/Python/3.9/lib/python/site-packages/sqlalchemy/engine/default.py:941: in do_execute\n    cursor.execute(statement, parameters)\nE   sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) index idx_versions_flow_published already exists\nE   [SQL: CREATE INDEX idx_versions_flow_published ON flow_versions (flow_id, published)]\nE   (Background on this error at: https://sqlalche.me/e/20/e3q8)\n=========================== short test summary info ============================\nERROR tests/test_integration_fixed.py::TestDatabaseIntegration::test_run_lifecycle_operations\nERROR tests/test_integration_fixed.py::TestWorkflowEngineIntegration::test_workflow_creation_and_compilation\nERROR tests/test_integration_fixed.py::TestWorkflowEngineIntegration::test_workflow_execution_lifecycle\nERROR tests/test_integration_fixed.py::TestAPIIntegration::test_flow_creation_and_start_integration\nERROR tests/test_integration_fixed.py::TestAPIIntegration::test_thread_control_integration\nERROR tests/test_integration_fixed.py::TestAPIIntegration::test_error_handling_integration\nERROR tests/test_integration_fixed.py::TestConcurrencyIntegration::test_concurrent_workflow_creation\nERROR tests/test_integration_fixed.py::TestConcurrencyIntegration::test_concurrent_database_operations\n========================= 2 passed, 8 errors in 1.78s ==========================\n",
      "stderr": "/Users/haowu/Library/Python/3.9/lib/python/site-packages/pytest_asyncio/plugin.py:208: PytestDeprecationWarning: The configuration option \"asyncio_default_fixture_loop_scope\" is unset.\nThe event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: \"function\", \"class\", \"module\", \"package\", \"session\"\n\n  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))\n",
      "success": false,
      "stats": {
        "total": 0,
        "passed": 0,
        "failed": 0,
        "errors": 0,
        "skipped": 0,
        "success_rate": 0
      }
    },
    "performance": {
      "status": "completed",
      "return_code": 2,
      "stdout": "============================= test session starts ==============================\ncollecting ... collected 0 items / 1 error\n\n==================================== ERRORS ====================================\n__________________ ERROR collecting tests/test_performance.py __________________\nImportError while importing test module '/Users/haowu/IdeaProjects/ai-product-selector3/src_new/tests/test_performance.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\ntests/test_performance.py:21: in <module>\n    from workflow_engine.core.models import WorkflowDefinition, NodeDefinition, NodeType\nE   ImportError: cannot import name 'NodeDefinition' from 'workflow_engine.core.models' (/Users/haowu/IdeaProjects/ai-product-selector3/src_new/tests/../workflow_engine/core/models.py)\n=========================== short test summary info ============================\nERROR tests/test_performance.py\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n=============================== 1 error in 0.92s ===============================\n",
      "stderr": "/Users/haowu/Library/Python/3.9/lib/python/site-packages/pytest_asyncio/plugin.py:208: PytestDeprecationWarning: The configuration option \"asyncio_default_fixture_loop_scope\" is unset.\nThe event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: \"function\", \"class\", \"module\", \"package\", \"session\"\n\n  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))\n",
      "success": false,
      "stats": {
        "total": 0,
        "passed": 0,
        "failed": 0,
        "errors": 0,
        "skipped": 0,
        "success_rate": 0
      }
    }
  },
  "summary": {
    "total_suites": 3,
    "successful_suites": 1,
    "total_tests": 15,
    "total_passed": 15,
    "total_failed": 0,
    "overall_success_rate": 100.0,
    "suite_success_rate": 33.3
  }
}